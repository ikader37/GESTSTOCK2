/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package geststock.ecrans.users;

import geststock.classes.Utilisateurs;
import geststock.ecrans.*;
import geststock.dialog.ConfirmDialogSup;
import geststock.utilities.OutilUtilities;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class UsersEcran extends javax.swing.JFrame {

    /**
     * Creates new form Rangement
     */
    private String operation;
    private Utilisateurs userAdd;
    private DefaultTableModel modelTable = new DefaultTableModel();

    private JMenuBar menuBars;

    public void desactiverButton(JButton btn, boolean actif) {
        btn.setEnabled(actif);
    }

    public void desactiverField(JTextField txt, boolean actif) {
        txt.setEnabled(actif);
    }

    public void desactiverComboBox(JComboBox txt, boolean actif) {
        txt.setEnabled(actif);
    }

    /**
     * Cette fonctions remplira le jtable avec des utilisateurs
     *
     * @param users est la liste des utilisateurs a afficher dans la jtable
     */
    public void remplirTableau(List<Utilisateurs> users) {
        int nombrepresent = modelTable.getRowCount();
        //Verifier quil ny a rien dedans
        int i = nombrepresent;
        if (nombrepresent > 0) {
            i--;
            while (i >= 0) {
                //Retirer les elemets du tableau
                modelTable.removeRow(i);
                i--;
            }
        }

        /**
         * Verifier que la liste passee en parametre n'est pas nulle
         */
        if (users != null) {
            i = 1;
            for (Utilisateurs u : users) {

                modelTable.addRow(new String[]{i + "", u.getId() + "", u.getUsername(), u.getNom(), u.getPrenom(), u.getRole()});

                i++;
            }
        }
    }

    public UsersEcran() {
        initComponents();
        OutilUtilities.fenetreCourante=this;
        desactiverButton(this.save, false);
        desactiverField(txt_nom, false);
        desactiverField(this.txt_prenom, false);
        desactiverField(this.txt_passe_1, false);
        desactiverField(this.txt_passe_2, false);
        desactiverField(this.txt_username, false);
        desactiverComboBox(this.cbox_role, false);
        desactiverButton(this.annuler, false);

        /**
         * Initialisons les colonnes de notre tableau
         */
        modelTable.addColumn("#");
        modelTable.addColumn("Id");
        modelTable.addColumn("Nom d'utilisateur");
        modelTable.addColumn("Nom");
        modelTable.addColumn("Prénom(s)");
        modelTable.addColumn("Rôle");

        userAdd = new Utilisateurs();
        remplirTableau(userAdd.listUtilisateurValide());

        this.setJMenuBar(OutilUtilities.menu);
        this.setLocationRelativeTo(null);
    }

    /**
     * Cette fonction permettra de mettre a vide les differents champs
     */
    public void renitialiserLesChamps() {
        this.txt_nom.setText("");
        this.txt_prenom.setText("");
        this.txt_username.setText("");
        this.txt_passe_1.setText("");
        this.txt_passe_2.setText("");
    }

    /**
     * Cette fonction remplie les champs en fonction de l'utilisateur envoye
     *
     * @param u
     */
    public void valeurChamp(Utilisateurs u) {

        txt_nom.setText(u.getNom());
        txt_prenom.setText(u.getPrenom());
        cbox_role.setSelectedItem(u.getRole());
        txt_username.setText(u.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        time_to_day = new javax.swing.JLabel();
        panelAdd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nom = new javax.swing.JTextField();
        txt_prenom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_passe_2 = new javax.swing.JPasswordField();
        txt_passe_1 = new javax.swing.JPasswordField();
        cbox_role = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableau = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        actualiser = new javax.swing.JButton();
        annuler = new javax.swing.JButton();
        save = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        nouveau = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Utilisateur");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GESTSTOCK");

        time_to_day.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        time_to_day.setForeground(new java.awt.Color(255, 51, 0));
        time_to_day.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time_to_day.setText(new Date().toString());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(time_to_day, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(time_to_day, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 81, Short.MAX_VALUE))
        );

        jLabel2.setText("Nom:");

        jLabel3.setText("Prénom(s):");

        jLabel4.setText("Mot de passe:");

        jLabel5.setText("Repeter mot de passe:");

        jLabel6.setText("Role:");

        txt_passe_2.setText("é\"&&é\"&é\"&é\"&é\"");

        txt_passe_1.setText("jPasswordField2");

        cbox_role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sécrétaire", "Caissier", "Administrateur" }));

        jLabel7.setText("Nom d'utilisateur:");

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_username))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_prenom)
                            .addComponent(txt_passe_1)))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_passe_2)
                            .addComponent(cbox_role, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(txt_username, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_passe_1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(txt_passe_2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                        .addGap(5, 5, 5)))
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_role, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tableau.setModel(modelTable);
        tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableau);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        actualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Syncpx.png"))); // NOI18N
        actualiser.setText("Actualiser");
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        annuler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Deletepx.png"))); // NOI18N
        annuler.setText("Annuler");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Savepx.png"))); // NOI18N
        save.setText("Enregistrer");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit Propertypx.png"))); // NOI18N
        modifier.setText("Modifier");
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Trashpx.png"))); // NOI18N
        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        nouveau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Pluspx.png"))); // NOI18N
        nouveau.setText("Nouveau");
        nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(nouveau, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supprimer)
                    .addComponent(nouveau)
                    .addComponent(modifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(annuler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actualiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        ConfirmDialogSup conf = new ConfirmDialogSup(this, true);
        conf.show();


    }//GEN-LAST:event_supprimerActionPerformed

    private void nouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauActionPerformed
        // TODO add your handling code here:
        desactiverButton(this.modifier, false);
        desactiverButton(this.nouveau, false);
        desactiverField(this.txt_prenom, true);
        desactiverField(this.txt_nom, true);
        desactiverButton(this.save, true);
        desactiverField(txt_nom, true);
        desactiverField(this.txt_passe_1, true);
        desactiverField(this.txt_passe_2, true);
        desactiverField(this.txt_username, true);

        desactiverComboBox(this.cbox_role, true);
        desactiverButton(this.annuler, true);
        desactiverButton(this.supprimer, false);

        this.operation = "new";
        userAdd = new Utilisateurs();
        renitialiserLesChamps();

    }//GEN-LAST:event_nouveauActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:

        desactiverField(txt_nom, false);
        desactiverField(this.txt_prenom, false);
        desactiverField(this.txt_passe_1, false);
        desactiverField(this.txt_passe_2, false);
        desactiverComboBox(this.cbox_role, false);
        desactiverField(this.txt_username, false);
        desactiverButton(this.save, false);
        desactiverButton(this.annuler, false);
        desactiverButton(this.nouveau, true);
        desactiverButton(this.supprimer, true);


    }//GEN-LAST:event_actualiserActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        desactiverButton(this.save, true);
        desactiverButton(this.annuler, true);
        desactiverField(txt_nom, true);
        desactiverField(this.txt_prenom, true);
        desactiverField(this.txt_passe_1, true);
        desactiverField(this.txt_passe_2, true);
        desactiverComboBox(this.cbox_role, true);
        desactiverField(this.txt_username, true);
        this.operation = "mod";
        if (tableau.getSelectedRow() < 0) {
            String id = tableau.getValueAt(0, 1).toString();
            userAdd.setId(Integer.parseInt(id));
            userAdd = userAdd.obtenirUtilisateur();
            valeurChamp(userAdd);
        } else {
            valeurChamp(userAdd);
        }
    }//GEN-LAST:event_modifierActionPerformed

    /**
     * Cette metode sera executee si on clique sur le bouton enregistrer
     *
     * @param evt
     */

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        /**
         * Recuperons les valeuurs des diferents champs saisi
         */

        String nom = txt_nom.getText().toString().trim().toUpperCase();
        String prenom = txt_prenom.getText().toString().trim();
        String username = txt_username.getText().toString().trim();
        String pass1 = txt_passe_1.getText().toString().trim();
        String pass2 = txt_passe_2.getText().toString().trim();
        String role = cbox_role.getSelectedItem().toString().trim();

        userAdd.setNom(nom);
        userAdd.setPrenom(prenom);
        userAdd.setRole(role);
        userAdd.setUsername(username);

        /**
         * Verifions sil s'agit d'un nouvel utilisateur ou une modification
         *
         */
        if (this.operation.equalsIgnoreCase("new")) {

            userAdd.setCreatedAt(new Date());
            userAdd.setUpdatedAt(new Date());
            /**
             * Si les mots de passe sont identiques On peut enregistrer cette
             * personne. Sinon on enevoie une erreur
             */
            if (pass1.equals(pass2)) {
                pass1 = OutilUtilities.md5Java(pass1);
                userAdd.setMotdepasse(pass1);
                boolean b = userAdd.createUtilisateur();
                /**
                 * Verifions que la creation fut un success
                 */
                if (b) {
                    OutilUtilities.afficherMessage("Enregistrement réussi avec success!!");

                    desactiverButton(this.save, false);
                    desactiverField(txt_nom, false);
                    desactiverField(this.txt_prenom, false);
                    desactiverField(this.txt_passe_1, false);
                    desactiverField(this.txt_username, false);
                    desactiverField(this.txt_passe_2, false);
                    desactiverComboBox(this.cbox_role, false);

                    desactiverButton(this.annuler, false);
                    desactiverButton(this.supprimer, true);
                    desactiverButton(this.modifier, true);

                    /**
                     * Remettrons les valeurs ddes champs a zeros
                     *
                     */
                    renitialiserLesChamps();
                } else {
                    OutilUtilities.afficherMessageErreur("Enregistrement échoué!!");
                }

            } else {
                OutilUtilities.afficherMessage("Mot de passe incorrect!!\n Veuillez réessayer svp.");
            }
        } else {
            userAdd.setUpdatedAt(new Date());

            /**
             * Desactivons les boutons et mettons a gris les differents champs
             */
            desactiverButton(this.save, false);
            desactiverField(txt_nom, false);
            desactiverField(this.txt_prenom, false);
            desactiverField(this.txt_passe_1, false);
            desactiverField(this.txt_username, false);
            desactiverField(this.txt_passe_2, false);
            desactiverComboBox(this.cbox_role, false);

            desactiverButton(this.annuler, false);
            desactiverButton(this.supprimer, true);
            desactiverButton(this.modifier, true);

            /**
             * Remettrons les valeurs ddes champs a zeros
             *
             */
            renitialiserLesChamps();
        }
        System.out.println(userAdd.listUtilisateurValide().size());

    }//GEN-LAST:event_saveActionPerformed

    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        // TODO add your handling code here:
        desactiverButton(this.save, false);
        desactiverField(txt_nom, false);
        desactiverField(this.txt_prenom, false);
        desactiverField(this.txt_passe_1, false);
        desactiverField(this.txt_passe_2, false);
        desactiverComboBox(this.cbox_role, false);
        desactiverButton(this.annuler, false);
        //desactiverButton(this., rootPaneCheckingEnabled);
        desactiverField(txt_username, false);
        System.out.println(userAdd.listUtilisateurValide().size());
    }//GEN-LAST:event_annulerActionPerformed

    private void tableauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauMouseClicked
        // TODO add your handling code here:
        int index = tableau.getSelectedRow();
        String id = tableau.getValueAt(index, 1).toString();
        System.out.println(id + "  " + index);
        userAdd.setId(Integer.parseInt(id));
        userAdd = userAdd.obtenirUtilisateur();

    }//GEN-LAST:event_tableauMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsersEcran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsersEcran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsersEcran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsersEcran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsersEcran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiser;
    private javax.swing.JButton annuler;
    private javax.swing.JComboBox<String> cbox_role;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifier;
    private javax.swing.JButton nouveau;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JButton save;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable tableau;
    private javax.swing.JLabel time_to_day;
    private javax.swing.JTextField txt_nom;
    private javax.swing.JPasswordField txt_passe_1;
    private javax.swing.JPasswordField txt_passe_2;
    private javax.swing.JTextField txt_prenom;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
